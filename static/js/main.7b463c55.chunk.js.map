{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","preparedTodos","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","isUserError","setUserError","isTitleEror","setTitleError","onSubmit","event","preventDefault","trim","addedUser","current","nextTodo","Math","max","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,UACAT,EACEM,EADFN,KAGF,OACE,0BACE,UAASO,EACTJ,UAAWO,IACT,WACA,CACE,sBAAuBD,IAL7B,UAUE,oBAAIN,UAAU,kBAAd,SAAiCK,IAEhCR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCtBlBW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,UCZb,GACb,CACEA,GAAI,EACJN,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BCnDX,SAASa,EAAaC,GACpB,OAAOC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKO,KAAOS,MAAW,KAG7D,IAAMG,ECZS,CACb,CACEZ,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXO,OAAQ,IDLkCH,KAAI,SAAAP,GAChD,OAAO,2BACFA,GADL,IAEEN,KAAMe,EAAaT,EAAKU,aAIfI,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA0BH,mBAASF,GAAnC,mBAAOP,EAAP,KAAca,EAAd,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAqCN,oBAAS,GAA9C,mBAAOO,EAAP,KAAoBC,EAApB,KA2CA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBAAMA,UAAU,OAAO2B,SA7CN,SAACC,GAMpB,GALAA,EAAMC,iBAENH,GAAerB,EAAMyB,QACrBN,GAAcJ,GAEO,KAAjBf,EAAMyB,QAAkBV,EAA5B,CAIA,IAAMW,EAAYnB,EAAaQ,GAE/BE,GAAS,SAAAU,GACP,IAAMC,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,EAAQtB,KAAI,SAAAP,GAAI,OAAIA,EAAKC,QAAO,EAE7D,MAAM,GAAN,mBACK4B,GADL,CAEE,CACE5B,GAAI6B,EACJ5B,QACAC,WAAW,EACXO,OAAQkB,EAAYA,EAAU3B,GAAK,KACnCP,KAAMkC,QAKZZ,EAAS,IACTE,EAAgB,KAiBd,UACE,sBAAKrB,UAAU,QAAf,UACE,uBACEoC,KAAK,OACLpC,UAAU,oBACVqC,YAAY,gBACZjC,GAAG,QACHN,KAAK,QACL,UAAQ,aACRwC,MAAOjC,EACPkC,SAxBgB,SAACX,GACzBT,EAASS,EAAMY,OAAOF,OACtBZ,GAAc,MAyBPD,GACC,sBAAMzB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRI,GAAG,aACHN,KAAK,aACLwC,MAAOlB,EACPmB,SAjCe,SAACX,GACxBP,EAAgBoB,OAAOb,EAAMY,OAAOF,QACpCd,GAAa,IA0BP,UAOE,wBAAQc,MAAM,IAAII,UAAQ,EAA1B,2BAEC5B,EAAgBJ,KAAI,gBAAGN,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAP,OACnB,wBAAiBwC,MAAOlC,EAAxB,SAA6BN,GAAhBM,SAIhBmB,GACC,sBAAMvB,UAAU,QAAhB,qCAIJ,wBACEoC,KAAK,SACL,UAAQ,eAFV,oBAQF,cAAC,EAAD,CAAU3B,MAAOA,QElHvBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b463c55.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isUserError, setUserError] = useState(false);\n  const [isTitleEror, setTitleError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setUserError(!selectedUser);\n\n    if (title.trim() === '' || !selectedUser) {\n      return;\n    }\n\n    const addedUser = findUserById(selectedUser);\n\n    setTodos(current => {\n      const nextTodo = Math.max(...current.map(todo => todo.id)) + 1;\n\n      return [\n        ...current,\n        {\n          id: nextTodo,\n          title,\n          completed: false,\n          userId: addedUser ? addedUser.id : null,\n          user: addedUser,\n        },\n      ];\n    });\n\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(Number(event.target.value));\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            className=\"form__field-input\"\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {isTitleEror && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>{name}</option>\n            ))}\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}